ALL CODE

CIRCLE

clc;
clear all;
syms r a b;
r= input("enter the radius of the circle");
a=input("enter the x coordinate of the centre");
b= input("enter the y coordinate of the centre");
t=linspace(0,2*pi,100);
x=a+r*cos(t);
y=b+sin(t);

axis equal;
plot(x,y);
xlabel("x-coordinate")
ylabel("y-coordinate")
title("(x-a)^2+(y-b)^2=r^2")

GRAPHS
clc
clear all
x=linspace(0,1,100);
plot(x,x.^2,"r","LineWidth",2.0)
hold on
plot(x,cos(x),"g","LineWidth",2.0)
hold on
plot(x,sin(x), "b", "LineWidth",2.0)
hold on
plot(x,exp(x),"c", "LineWidth",2.0)
legend("x^2", "cos(x)", "sin(x)","e^x")



clc
clear all
x=linspace(0,1,200);
plot(x,sin(x),x,cos(x),x,x.^3,x,tan(x),"LineWidth",2.0)
legend("sin(x)", "cos(x)", "x^3","tan(x)")



INDIVIDUAL GRAPHS

clc
clear all
x=0:0.1:2*pi;
subplot(2,2,1)
plot(x,sin(x))
title("sin(x)")
subplot(2,2,2)
plot(x,cos(x),"r")
title("cos(x)")
subplot(2,2,3)
plot(x,exp(-x),"go")
title("e^-x")
subplot(2,2,4)
plot(x,sin(3*x),"ms")
title("sin(3x)")


FUNCTION


clc
clear all
syms x
f=sin(2*x)+cos(3*x);
figure(1)
ezplot(f)
figure(2)
ezplot(f,[0,3])


TANGENT

clc
clear all
syms x
y=input("enter the fun f in terms of x");
x1=input("enter x value at which tangent");
D=[x1-2 x1 +1];
ezplot(y,D)
hold on
yd=diff(y,x);
slope=subs(yd,x,x1);
y1=subs(y,x,x1);
plot(x1,y1,"ko")
tagline=slope*(x-x1)+y1;

﻿DERIVATIVE

clc
clear all 
syms x
f=input("enter the function of f(x)");
fx=diff(f,x); 
fxx=diff(fx,x); 
D=[0,5]; 
l=ezplot(fx,D);
set(l, "color","b") 
hold on; 
h=ezplot(fx,D);
set (h,"color","r");
e=ezplot(fxx,D);
set(e, "color", "g");
legend("f","fx","fxx")
Legend("Location", "northeastoutside")


MAXIMA MINIMA
clc
clear all
syms x real
f= input(‘Enter the function f(x):’);
fx= diff(f,x);
fxx= diff(fx,x);
c = solve(fx)
c=double(c);
for i = 1:length(c)
T1 = subs(fxx, x ,c(i) );
T1=double(T1);
T3= subs(f, x, c(i));
T3=double(T3);
if (T1==0)
sprintf(‘The inflection point is x = %d’,c(i))
else
if (T1 < 0)
sprintf(‘The maximum point x is %d’, c(i))
sprintf(‘The maximum value of the function is %d’, T3)
else
sprintf(‘The minimum point x is %d’, c(i))
sprintf(‘The minimum value of the function is %d’, T3)
end
end
cmin = min(c);
cmax = max(c);
D = [cmin-2, cmax+2];
ezplot(f,D)
hold on
plot(c(i), T3, ‘g*’, ‘markersize’, 15);
end


AREA UNDER CURVE

clc
clear
syms x
y1=input(‘enter the upper curve as a function of x : ’);
y2=input(‘enter the lower curve as a function of x : ’);
t=solve(y1-y2);
t=double(t);
A=int(y1-y2,t(1),t(2))
D=[t(1)-0.2 t(2)+0.2];
ez1=ezplot(y1,D);
set(ez1,‘color’,‘r’)
hold on
ez2=ezplot(y2,D);
set(ez2,‘color’,‘g’)
xv = linspace(t(1),t(2));
y1v =subs(y1,x,xv);
y2v = subs(y2,x,xv);
x = [xv,xv];
y = [y1v,y2v];
fill(x,y,‘b’)


SOLID OF REVOLUTION

clc
clear all
syms x
f = input('Enter the function: ');
fL = input('Enter the interval on which the function is defined: ');
yr = input('Enter the axis of rotation y = c (enter only c value): ');
iL = input('Enter the integration limits: ');
Volume = pi*int((f-yr)^2,iL(1),iL(2));
disp(['Volume is: ', num2str(double(Volume))])
fx = inline(vectorize(f ));
xvals = linspace(fL(1),fL(2),201);
xvalsr = fliplr(xvals);
xivals = linspace(iL(1),iL(2),201);
xivalsr = fliplr(xivals);
xlim = [fL(1) fL(2)+0.5];
ylim = fx(xlim);
figure('Position',[100 200 560 420])
subplot(2,1,1)
hold on;
plot(xvals,fx(xvals),'-b','LineWidth',2);
[X,Y,Z] = cylinder(fx(xivals)-yr,100);
figure('Position',[700 200 560 420])
Z = iL(1) + Z.*(iL(2)-iL(1));
surf(Z,Y+yr,X,'EdgeColor','none','FaceColor','flat','FaceAlpha',0.6);
hold on;
plot([iL(1) iL(2)],[yr yr],'-r','LineWidth',2);
xlabel('X-axis');
ylabel('Y-axis');
zlabel('Z-axis');
view(22,11);


MAX 2 VARIABLE
clc  
clear  
syms x y  
f(x,y)=input('Enter the function f(x,y):');  
p=diff(f,x); q=diff(f,y);  
[ax,ay]=solve(p,q);  
ax=double(ax);ay=double(ay);  
r=diff(p,x); s=diff(p,y); t=diff(q,y);D=r*t-s^2;  
figure  
fsurf(f);  
legstr={'Function Plot'};% for Legend 
for i=1:size(ax)  
T1=D(ax(i),ay(i));  
T2=r(ax(i),ay(i));  
T3=f(ax(i),ay(i));  
if(double(T1)==0)  
sprintf('At (%f,%f) further investigation is required',ax(i),ay(i))  
legstr=[legstr,{'Case of Further investigation'}];  
mkr='ko';  
elseif (double(T1)<0)  
sprintf('The point (%f,%f) is a saddle point', ax(i),ay(i))  
legstr=[legstr,{'Saddle Point'}]; % updating Legend 
mkr='bv'; % marker 
else 
if (double(T2) < 0)  
sprintf('The maximum value of the function is f(%f,%f)=%f', ax(i),ay(i), T3)  
legstr=[legstr,{'Maximum value of the function'}];% updating Legend mkr='g+';% marker 
else 
sprintf('The minimum value of the function is f(%f,%f)=%f', ax(i),ay(i), T3)  
legstr=[legstr,{'Minimum value of the function'}];% updating Legend  mkr='r*'; % marker 
end 
end 
hold on 
plot3(ax(i),ay(i),T3,mkr,'Linewidth',4);  
end 
legend(legstr,'Location','Best');  



LAGRANGE
TWO VARIABLE
clc
clearvars
syms x y L
f = input('Enter the function f(x,y): ');
g = input('Enter the constraint function g(x,y): ');
F = f + L*g;
gradF = jacobian(F,[x,y]);
[L,x1,y1] = solve(g,gradF(1),gradF(2),'Real',true); 
x1 = double(x1); y1 = double(y1);
xmx = max(x1); xmn = min(x1);
ymx = max(y1); ymn = min(y1); 
range = [xmn−3 xmx+3 ymn−3 ymx+3];
ezmesh(f,range);hold on; grid on;
h = ezplot(g,range); set(h,'LineWidth',2);
tmp = get(h,'contourMatrix');
xdt = tmp(1,2:end); 
ydt = tmp(2,2:end);
zdt = double(subs(f,{x,y},{xdt,ydt}));
plot3(xdt,ydt,zdt,'−r','LineWidth',2);axis(range);
for i = 1:numel(x1)
G(i) = subs(f,[x,y],[x1(i),y1(i)])
plot3(x1(i),y1(i),G(i),'*k','MarkerSize',20);
end
title('Constrained Maxima/Minima')

THREE VARIABLES

clc
clearvars
syms x y z L
f = input('Enter the function f(x,y,z): ');
g = input('Enter the constraint function g(x,y,z): ');
F = f + L*g;
gradF = jacobian(F,[x,y,z]);
[L,x1,y1,z1] = solve(g,gradF(1),gradF(2),gradF(3));
Z = [x1 y1 z1];
disp('[x y z]=')
disp(Z)